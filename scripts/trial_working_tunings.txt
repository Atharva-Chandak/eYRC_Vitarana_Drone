        
self.Kp = [10000000, 10000000,1000]
self.Ki = [0, 0, -0.138]
self.Kd = [100000000,  100000000, 2300]

        
self.Kp = [10000000*7, 10000000*7,1000]
self.Ki = [0, 0, -0.138]
self.Kd = [100000000*7,  100000000*7, 2300]


self.Kp = [10000000*10.5, 10000000*10.5,1000]
self.Ki = [0, 0, -0.138]
self.Kd = [100000000*6, 100000000*6, 2300]

# 7sec:
self.Kp = [1000000*10.5, 1000000*10.5,1000]
self.Ki = [0, 0, -0.138]
self.Kd = [10000000*9.1, 10000000*9.1, 2300]

self.Kp = [1000000*15, 1000000*15,1000]
self.Ki = [0, 0, -0.138]
self.Kd = [10000000*11.5, 10000000*11.5, 2300]
    

12.5m working range - less stable, but faster
self.Kp = [1000000*17.3, 1000000*17.3,1000]
self.Ki = [0, 0, -0.138]
self.Kd = [10000000*15, 10000000*15, 2300]

self.Kp = [1000000*4*17, 1000000*4*17,1000]
self.Ki = [0, 0, -0.138]
self.Kd = [10000000*50, 10000000*50, 2300]

for roll_Kd=10000000*50 is almost the upper bound. Above it, it never stabilizes.
    For this exact value, it takes time to stabilize at equilibruim position

TASK 5 trials -- with obstacle avoidance
self.Kp = [ 100, 100, 1000]
self.Ki = [0, 0, -0.138]
self.Kd = [ 600, 600, 2300 ]
self.min_value = [1250, 1250, 1000]
self.max_value = [1750, 1750, 2000]